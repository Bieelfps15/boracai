adicionais: SELECT 
    TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(pd.adicionais, ',', numbers.n), ',', -1)) AS Adicional,
    COUNT(*) AS Quantidade_Adicional
FROM 
    pedido pd
JOIN 
    (
        SELECT 
            1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 
            UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 
            UNION ALL SELECT 9 UNION ALL SELECT 10 -- Ajuste este número para o máximo de adicionais
    ) numbers ON CHAR_LENGTH(pd.adicionais) - CHAR_LENGTH(REPLACE(pd.adicionais, ',', '')) >= numbers.n - 1
WHERE 
    TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(pd.adicionais, ',', numbers.n), ',', -1)) <> 'Nenhum'
    AND TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(pd.adicionais, ',', numbers.n), ',', -1)) <> ''
GROUP BY 
    Adicional
ORDER BY 
    Adicional;




    tamanhos: SELECT 
    p.tamanho AS Tamanho,
    COUNT(*) AS Quantidade_Tamanho
FROM 
    pedido pd
JOIN 
    produto p ON pd.nomeproduto = CONCAT_WS(' - R$ ', p.tamanho, p.valor)
GROUP BY 
    p.tamanho
ORDER BY 
    p.tamanho;


    sabores: SELECT 
    TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(p.nomeproduto, ' - ', -1), 'R$', 1)) AS Sabor,
    COUNT(*) AS Quantidade
FROM 
    pedido p
WHERE 
    p.nomeproduto NOT LIKE '%Açai%'
    AND TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(p.nomeproduto, ' - ', -1), 'R$', 1)) <> ''
    AND TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(p.nomeproduto, ' - ', -1), 'R$', 1)) NOT REGEXP '^[0-9]+$' 
GROUP BY 
    Sabor
ORDER BY 
    Sabor;

